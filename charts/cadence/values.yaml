# -- Provide a name to override the name of the chart
nameOverride: ~
# -- Provide a name to override the full names of resources
fullnameOverride: ~

# Global configuration
global:
  # -- Global image configuration (shared only by Cadence Server services [frontend, worker, matching and history])
  image:
    repository: "docker.io/ubercadence/server"
    tag: "v1.3.2-auto-setup"
    pullPolicy: IfNotPresent

  # -- Image pull secrets for private registries
  imagePullSecrets: []
  # - name: myregistrykey

  # -- Global environment variables (shared only by Cadence Server services [frontend, worker, matching and history])
  env:
    - name: ENABLE_ES
      value: "false"
    - name: SKIP_SCHEMA_SETUP
      value: "true"
    - name: RINGPOP_BOOTSTRAP_MODE
      value: "dns"
    - name: BIND_ON_IP
      value: 0.0.0.0

  # -- Global secret environment variables (shared only by Cadence Server services [frontend, worker, matching and history])
  secretEnv: []
  # - name: GLOBAL_SECRET_ENV_VAR
  #   value: "value"

  # -- Global pod security context
  podSecurityContext: {}
    # runAsNonRoot: true
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Global container security context
  containerSecurityContext: {}
    # allowPrivilegeEscalation: false
    # readOnlyRootFilesystem: true
    # capabilities:
    #   drop:
    #     - ALL

  # -- Global affinity rules
  affinity: {}

  # -- Global tolerations
  tolerations: []

  # -- Global node selector
  nodeSelector: {}

  # -- Global logging configuration (shared only by Cadence Server services [frontend, worker, matching and history])
  log:
    # -- Enable stdout logging
    stdout: true
    # -- Logging level (debug, info, warn, error)
    level: "info"

  # -- Global priority class name for pod scheduling
  priorityClassName: ""

  # -- Global topology spread constraints
  topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule

# Frontend service configuration
frontend:
  # -- Image configuration (inherits from global if not specified)
  image: {}
    # repository: "docker.io/ubercadence/server"
    # tag: ""
    # pullPolicy: IfNotPresent
    # imagePullSecrets: []
      # - name: myregistrykey

  # -- Number of frontend replicas to deploy
  replicas: 1

  # -- Tchannel port of cadence frontend service. DO NOT CHANGE
  port: 7933
  # -- GRPC port of cadence frontend service. DO NOT CHANGE
  grpcPort: 7833

  # -- Environment variables for frontend service
  env: []
  # - name: ENV_VAR
  #   value: "value"

  # -- Secret environment variables for frontend service
  secretEnv: []
  # - name: SECRET_ENV_VAR
  #   value: "value"

  # -- Deployment strategy for frontend service
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # -- Resource limits and requests
  resources: {}
    # limits:
    #   cpu: "500m"
    #   memory: "1Gi"
    # requests:
    #   cpu: "500m"
    #   memory: "1Gi"

  # -- Pod Disruption Budget
  podDisruptionBudget:
    enabled: false # Usually false for single replica services
    minAvailable: 1
    # maxUnavailable: 1

  # -- Pod security context (inherits from global if not specified)
  podSecurityContext: {}

  # -- Container security context (inherits from global if not specified)
  containerSecurityContext: {}

  # -- Affinity rules (inherits from global if not specified)
  affinity: {}

  # -- Tolerations (inherits from global if not specified)
  tolerations: []

  # -- Node selector (inherits from global if not specified)
  nodeSelector: {}

  # -- Additional pod annotations
  podAnnotations: {}

  # -- Additional pod labels
  podLabels: {}

  # -- Logging configuration (inherits from global log if not specified)
  log: {}
    # -- Enable stdout logging
    # stdout: true
    # -- Logging level (debug, info, warn, error)
    # level: "info"

  # -- Priority class name for pod scheduling (inherits from global if not specified)
  priorityClassName: ""

  # -- Topology spread constraints (inherits from global if not specified)
  topologySpreadConstraints: []

# Matching service configuration
matching:
  # -- Image configuration (inherits from global if not specified)
  image: {}
    # repository: "docker.io/ubercadence/server"
    # tag: ""
    # pullPolicy: IfNotPresent
    # imagePullSecrets: []
      # - name: myregistrykey

  # -- Number of matching replicas to deploy
  replicas: 1

  # -- Tchannel port of cadence matching service. DO NOT CHANGE
  port: 7935
  # -- GRPC port of cadence matching service. DO NOT CHANGE
  grpcPort: 7835

  # -- Environment variables for matching service
  env: []
  # - name: ENV_VAR
  #   value: "value"

  # -- Secret environment variables for matching service
  secretEnv: []
  # - name: SECRET_ENV_VAR
  #   value: "value"

  # -- Deployment strategy for matching service
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # -- Resource limits and requests
  resources: {}
    # limits:
    #   cpu: "500m"
    #   memory: "1Gi"
    # requests:
    #   cpu: "500m"
    #   memory: "1Gi"

  # -- Pod Disruption Budget
  podDisruptionBudget:
    enabled: false # Recommended for multi-replica services
    minAvailable: 2
    # maxUnavailable: 1

  # -- Pod security context (inherits from global if not specified)
  podSecurityContext: {}

  # -- Container security context (inherits from global if not specified)
  containerSecurityContext: {}

  # -- Affinity rules (inherits from global if not specified)
  affinity: {}

  # -- Tolerations (inherits from global if not specified)
  tolerations: []

  # -- Node selector (inherits from global if not specified)
  nodeSelector: {}

  # -- Additional pod annotations
  podAnnotations: {}

  # -- Additional pod labels
  podLabels: {}

  # -- Logging configuration (inherits from global log if not specified)
  log: {}
    # -- Enable stdout logging
    # stdout: true
    # -- Logging level (debug, info, warn, error)
    # level: "info"

  # -- Priority class name for pod scheduling (inherits from global if not specified)
  priorityClassName: ""

  # -- Topology spread constraints (inherits from global if not specified)
  topologySpreadConstraints: []

# History service configuration
history:
  # -- Image configuration (inherits from global if not specified)
  image: {}
    # repository: "docker.io/ubercadence/server"
    # tag: ""
    # pullPolicy: IfNotPresent
    # imagePullSecrets: []
      # - name: myregistrykey

  # -- Number of history replicas to deploy
  replicas: 1

  # -- Tchannel port of cadence history service. DO NOT CHANGE
  port: 7934
  # -- GRPC port of cadence history service. DO NOT CHANGE
  grpcPort: 7834

  # -- Environment variables for history service
  env: []
  # - name: ENV_VAR
  #   value: "value"

  # -- Secret environment variables for history service
  secretEnv: []
  # - name: SECRET_ENV_VAR
  #   value: "value"

  # -- Deployment strategy for history service
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # -- Resource limits and requests
  resources: {}
    # limits:
    #   cpu: "500m"
    #   memory: "1Gi"
    # requests:
    #   cpu: "500m"
    #   memory: "1Gi"

  # -- Pod Disruption Budget
  podDisruptionBudget:
    enabled: false # Recommended for multi-replica services
    minAvailable: 2
    # maxUnavailable: 1

  # -- Pod security context (inherits from global if not specified)
  podSecurityContext: {}

  # -- Container security context (inherits from global if not specified)
  containerSecurityContext: {}

  # -- Affinity rules (inherits from global if not specified)
  affinity: {}

  # -- Tolerations (inherits from global if not specified)
  tolerations: []

  # -- Node selector (inherits from global if not specified)
  nodeSelector: {}

  # -- Additional pod annotations
  podAnnotations: {}

  # -- Additional pod labels
  podLabels: {}

  # -- Logging configuration (inherits from global log if not specified)
  log: {}
    # -- Enable stdout logging
    # stdout: true
    # -- Logging level (debug, info, warn, error)
    # level: "info"

  # -- Priority class name for pod scheduling (inherits from global if not specified)
  priorityClassName: ""

  # -- Topology spread constraints (inherits from global if not specified)
  topologySpreadConstraints: []

# Worker service configuration
worker:
  # -- Image configuration (inherits from global if not specified)
  image: {}
    # repository: "docker.io/ubercadence/server"
    # tag: ""
    # pullPolicy: IfNotPresent
    # imagePullSecrets: []
      # - name: myregistrykey

  # -- Number of worker replicas to deploy
  replicas: 1

  # -- Tchannel port of cadence worker service. DO NOT CHANGE
  port: 7939

  # -- Environment variables for worker service
  env: []
  # - name: ENV_VAR
  #   value: "value"

  # -- Secret environment variables for worker service
  secretEnv: []
  # - name: SECRET_ENV_VAR
  #   value: "value"

  # -- Deployment strategy for worker service
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # -- Resource limits and requests
  resources: {}
    # limits:
    #   cpu: "500m"
    #   memory: "1Gi"
    # requests:
    #   cpu: "500m"
    #   memory: "1Gi"

  # -- Pod Disruption Budget
  podDisruptionBudget:
    enabled: false  # Usually false for single replica services
    minAvailable: 1
    # maxUnavailable: 0

  # -- Pod security context (inherits from global if not specified)
  podSecurityContext: {}

  # -- Container security context (inherits from global if not specified)
  containerSecurityContext: {}

  # -- Affinity rules (inherits from global if not specified)
  affinity: {}

  # -- Tolerations (inherits from global if not specified)
  tolerations: []

  # -- Node selector (inherits from global if not specified)
  nodeSelector: {}

  # -- Additional pod annotations
  podAnnotations: {}

  # -- Additional pod labels
  podLabels: {}

  # -- Logging configuration (inherits from global log if not specified)
  log: {}
    # -- Enable stdout logging
    # stdout: true
    # -- Logging level (debug, info, warn, error)
    # level: "info"

  # -- Priority class name for pod scheduling (inherits from global if not specified)
  priorityClassName: ""

  # -- Topology spread constraints (inherits from global if not specified)
  topologySpreadConstraints: []

# Web UI configuration
web:
  # -- Image configuration for Web UI
  image:
    repository: "docker.io/ubercadence/web"
    tag: "v4.0.3"
    pullPolicy: IfNotPresent
    imagePullSecrets: []
      # - name: myregistrykey

  # -- Number of web UI replicas to deploy
  replicas: 1

  # -- Environment variables for web UI
  env:
  - name: CADENCE_WEB_PORT
    value: "8088"

  # -- Secret environment variables for web UI
  secretEnv: []
  # - name: SECRET_ENV_VAR
  #   value: "value"

  # -- Deployment strategy for web UI
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  # -- Resource limits and requests
  resources: {}
    # limits:
    #   cpu: "500m"
    #   memory: "1Gi"
    # requests:
    #   cpu: "500m"
    #   memory: "1Gi"

  # -- Pod Disruption Budget
  podDisruptionBudget:
    enabled: false # Usually false for single replica services
    minAvailable: 1
    # maxUnavailable: 0

  # -- Pod security context (inherits from global if not specified)
  podSecurityContext: {}

  # -- Container security context (inherits from global if not specified)
  containerSecurityContext: {}

  # -- Affinity rules (inherits from global if not specified)
  affinity: {}

  # -- Tolerations (inherits from global if not specified)
  tolerations: []

  # -- Node selector (inherits from global if not specified)
  nodeSelector: {}

  # -- Additional pod annotations
  podAnnotations: {}

  # -- Additional pod labels
  podLabels: {}

  # -- Priority class name for pod scheduling (inherits from global if not specified)
  priorityClassName: ""

  # -- Topology spread constraints (inherits from global if not specified)
  topologySpreadConstraints: []

  # Service configuration
  service:
    # -- Service type (ClusterIP, NodePort, LoadBalancer)
    type: ClusterIP
    # -- Service port
    port: 8088
    # -- NodePort (only if type is NodePort)
    nodePort: ~
    # -- LoadBalancer IP (only if type is LoadBalancer)
    loadBalancerIP: ~
    # -- LoadBalancer source ranges (only if type is LoadBalancer)
    loadBalancerSourceRanges: []
    # -- Service annotations
    annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-type: nlb

  # Cadence web ingress configuration (if needed)
  ingress:
    # -- Enable ingress
    enabled: false
    # -- Ingress class name
    className: ""
    # -- Ingress annotations
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # -- Ingress hosts configuration
    hosts: []
      # - host: cadence.example.com
      #   paths:
      #     - path: /
      #       pathType: Prefix
    # -- TLS configuration
    tls: []
      # - secretName: cadence-web-tls
      #   hosts:
      #     - cadence.example.com

# Dynamic configuration
dynamicConfig:
  # -- Dynamic config values to be set in the Cadence server
  # List of keys can be found at https://pkg.go.dev/github.com/uber/cadence@v1.3.0/common/dynamicconfig/dynamicproperties
  values:
    history.workflowIDExternalRateLimitEnabled:
      - value: true

# Service Account configuration
serviceAccount:
  # -- Enable service account creation
  create: true
  # -- Service account name (generated if not set)
  name: ""
  # -- Annotations for service account
  annotations: {}
  # -- Automatically mount service account token
  automountServiceAccountToken: true

# RBAC configuration
rbac:
  # -- Enable RBAC creation
  create: false

# Network Policies
networkPolicy:
  # -- Enable network policies
  enabled: false
  # -- Ingress rules
  ingress: []
  # -- Egress rules
  egress: []

# Metrics configuration
metrics:
  # -- Enable metrics collection
  enabled: true
  # -- Metrics port
  port: 9090
  # -- Metrics port name
  portName: metrics

  # ServiceMonitor for Prometheus Operator
  serviceMonitor:
    # -- Enable ServiceMonitor creation
    enabled: false
    # -- Additional labels for ServiceMonitor
    additionalLabels: {}
    # -- Annotations for ServiceMonitor
    annotations: {}
    # -- Namespace for ServiceMonitor (defaults to release namespace)
    namespace: ""
    # -- Joblabel for ServiceMonitor
    jobLabel: ""
    # -- Namespace selector for ServiceMonitor
    namespaceSelector: []
    # -- Scrape interval
    scrapeInterval: 15s
    # -- Honor labels from target (False if it's commented | True if it's uncomment)
    # honorLabels: true
    # -- Target labels to be added
    targetLabels: []
    # -- Relabeling configs
    relabelings: []
    # -- Metric relabeling configs
    metricRelabelings: []

# HorizontalPodAutoscaler configuration
autoscaling:
  # -- Enable HPA for frontend service
  frontend:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    # behavior:
    #   scaleDown:
    #     stabilizationWindowSeconds: 300
    #     policies:
    #     - type: Percent
    #       value: 50
    #       periodSeconds: 60
    #   scaleUp:
    #     stabilizationWindowSeconds: 60
    #     policies:
    #     - type: Percent
    #       value: 100
    #       periodSeconds: 15

  # -- Enable HPA for matching service
  matching:
    enabled: false
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # -- Enable HPA for history service
  history:
    enabled: false
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # -- Enable HPA for worker service
  worker:
    enabled: false
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

##############################
### DATABASE CONFIGURATION ###
##############################

# Cassandra configuration
cassandra:
  # -- External Cassandra endpoint to connect to. Required when cassandra.deployment.enabled is set to false
  endpoint: ""

  schema:
    # -- Cassandra schema version of the Cadence keyspace to use
    version: "0.42"
    # -- Cassandra schema version of the Cadence visibility keyspace to use
    visibility_version: "0.9"

  deployment:
    # -- When enabled, a single instance Cassandra will be deployed as part of the Helm chart
    # -- When disabled, the Cassandra deployment is expected to be provided externally
    enabled: true

    image:
      repository: "cassandra"
      tag: "4.1.1"
      pullPolicy: IfNotPresent

    # -- Resource limits and requests for Cassandra
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
